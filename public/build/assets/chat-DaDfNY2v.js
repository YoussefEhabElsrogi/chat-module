class r{constructor(){this.currentChatId=null,this.isLoading=!1,this.isTyping=!1,this.init()}init(){this.bindEvents(),this.setupCSRF(),this.setupMobileSidebar(),this.setupAutoResize(),this.waitForDOMAndRestore()}setupCSRF(){this.csrfToken=document.querySelector('meta[name="csrf-token"]').getAttribute("content")}setupMobileSidebar(){const t=document.getElementById("sidebarToggle"),e=document.getElementById("sidebarOverlay"),s=document.querySelector(".col-lg-4");t&&s&&e&&(t.addEventListener("click",()=>{s.classList.toggle("show"),e.style.display=e.style.display==="block"?"none":"block"}),e.addEventListener("click",()=>{s.classList.remove("show"),e.style.display="none"}),document.addEventListener("click",n=>{window.innerWidth<992&&n.target.closest(".chat-item")&&(s.classList.remove("show"),e.style.display="none")}))}setupAutoResize(){const t=document.getElementById("messageInput");t&&t.addEventListener("input",()=>{this.autoResizeTextarea(t)})}saveActiveChat(t){t?localStorage.setItem("activeChatId",t):localStorage.removeItem("activeChatId")}waitForDOMAndRestore(){document.readyState==="complete"?this.restoreActiveChat():document.readyState==="interactive"?this.restoreActiveChat():document.addEventListener("DOMContentLoaded",()=>{this.restoreActiveChat()})}async restoreActiveChat(){const t=localStorage.getItem("activeChatId");if(t){let e=document.querySelector(`.chat-item-wrapper[data-chat-id="${t}"]`);if(!e)for(let s=0;s<5&&(await new Promise(n=>setTimeout(n,100)),e=document.querySelector(`.chat-item-wrapper[data-chat-id="${t}"]`),!e);s++);e?await this.loadChat(t):localStorage.removeItem("activeChatId")}}bindEvents(){const t=document.getElementById("newChatBtn"),e=document.getElementById("newChatBtnDesktop");t&&t.addEventListener("click",()=>this.startNewChat()),e&&e.addEventListener("click",()=>this.startNewChat());const s=document.getElementById("chatForm");s&&s.addEventListener("submit",a=>this.handleSubmit(a)),document.addEventListener("click",a=>{if(a.target.closest(".chat-item")){a.preventDefault();const i=a.target.closest(".chat-item-wrapper"),o=i?i.dataset.chatId:null;o&&this.loadChat(o)}}),document.addEventListener("click",a=>{if(a.target.closest(".delete-chat-btn")){a.preventDefault(),a.stopPropagation();const i=a.target.closest(".delete-chat-btn").dataset.chatId;this.deleteChat(i)}});const n=document.getElementById("messageInput");n&&n.addEventListener("keypress",a=>{a.key==="Enter"&&!a.shiftKey&&(a.preventDefault(),this.handleSubmit(a))}),window.addEventListener("resize",()=>{if(window.innerWidth>=992){const a=document.querySelector(".col-lg-4"),i=document.getElementById("sidebarOverlay");a&&i&&(a.classList.remove("show"),i.style.display="none")}})}async startNewChat(){try{const t=this.hasAnyChats(),s=await(await fetch("/dashboard/chat/start",{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.csrfToken}})).json();s.success&&(this.currentChatId=s.chat.id,this.saveActiveChat(s.chat.id),this.updateChatTitle(s.chat.title),this.clearMessages(),this.enableInput(),this.scrollToBottom(),t?this.addChatToList(s.chat):await this.refreshChatList())}catch{this.showError("Failed to start new chat")}}async loadChat(t){try{if(!t){this.showError("No chat ID provided");return}this.currentChatId=t,this.saveActiveChat(t);const e=document.querySelector(`.chat-item-wrapper[data-chat-id="${t}"]`);if(!e){this.showError("Chat not found");return}const s=await fetch(`/dashboard/chat/${t}/messages`,{method:"GET",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.csrfToken}});if(!s.ok)throw new Error(`HTTP error! status: ${s.status}`);const n=await s.json();if(n.success){this.clearMessages(),n.messages&&n.messages.length>0?n.messages.forEach(i=>this.addMessage(i)):this.showEmptyChatMessage(),this.scrollToBottom(),this.enableInput(),document.querySelectorAll(".chat-item").forEach(i=>{i.classList.remove("active")}),e.querySelector(".chat-item").classList.add("active");const a=e.querySelector("h6");a&&this.updateChatTitle(a.textContent)}else this.showError(n.error||"Failed to load chat messages")}catch(e){this.showError(`Failed to load chat: ${e.message}`)}}async handleSubmit(t){if(t.preventDefault(),this.isLoading||!this.currentChatId)return;const e=document.getElementById("messageInput"),s=e.value.trim();if(s){this.addMessage({sender:"user",message:s,created_at:new Date().toISOString()}),e.value="",this.autoResizeTextarea(e),this.disableInput(),this.showLoading();try{const a=await(await fetch(`/dashboard/chat/${this.currentChatId}/send`,{method:"POST",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.csrfToken},body:JSON.stringify({message:s})})).json();a.success?(this.addMessage(a.ai_message),this.updateChatInList(this.currentChatId,a.ai_message.message)):this.showError("Failed to send message")}catch{this.showError("Failed to send message")}finally{this.hideLoading(),this.enableInput()}}}addMessage(t){const e=document.getElementById("chatMessages"),s=e.querySelector(".d-flex.align-items-center.justify-content-center");s&&s.remove();const n=document.createElement("div");n.className=`message ${t.sender}`;const a=new Date(t.created_at).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"}),i=t.sender==="user"?window.userData&&window.userData.name?window.userData.name.charAt(0).toUpperCase():"U":"";n.innerHTML=`
            <div class="message-avatar">
                ${i}
            </div>
            <div class="message-content">
                <div class="message-text">${this.formatMessage(t.message)}</div>
                <div class="message-time">${a}</div>
            </div>
        `,e.appendChild(n),this.scrollToBottom()}formatMessage(t){let e=t.replace(/\n/g,"<br>");const s=/(https?:\/\/[^\s]+)/g;return e=e.replace(s,'<a href="$1" target="_blank" rel="noopener noreferrer" class="text-blue-600 hover:text-blue-800 underline">$1</a>'),e=e.replace(/```([\s\S]*?)```/g,'<pre class="bg-gray-100 p-3 rounded-lg overflow-x-auto my-2"><code>$1</code></pre>'),e=e.replace(/`([^`]+)`/g,'<code class="bg-gray-100 px-1 py-0.5 rounded text-sm">$1</code>'),e}clearMessages(){const t=document.getElementById("chatMessages");t.innerHTML=""}updateChatTitle(t){const e=document.getElementById("chatTitle");e&&(e.textContent=t)}enableInput(){const t=document.getElementById("messageInput"),e=document.querySelector('#chatForm button[type="submit"]');t&&(t.disabled=!1),e&&(e.disabled=!1)}disableInput(){const t=document.getElementById("messageInput"),e=document.querySelector('#chatForm button[type="submit"]');t&&(t.disabled=!0),e&&(e.disabled=!0)}showLoading(){this.isLoading=!0;const t=document.getElementById("loadingOverlay");t&&t.classList.remove("hidden")}hideLoading(){this.isLoading=!1;const t=document.getElementById("loadingOverlay");t&&t.classList.add("hidden")}showError(t){typeof Swal<"u"?Swal.mixin({customClass:{confirmButton:"btn btn-danger"},buttonsStyling:!0}).fire({title:"Error!",text:t,icon:"error",confirmButtonText:"OK"}):alert(`Error: ${t}`)}scrollToBottom(){const t=document.getElementById("chatMessages");t&&(t.scrollTop=t.scrollHeight)}async deleteChat(t){const e=Swal.mixin({customClass:{confirmButton:"btn btn-success",cancelButton:"btn btn-danger"},buttonsStyling:!0,allowOutsideClick:!1,allowEscapeKey:!1,backdrop:!0,focusConfirm:!1,heightAuto:!1});e.fire({title:"Are you sure?",text:"You will not be able to recover this chat!",icon:"warning",showCancelButton:!0,confirmButtonText:"Yes, delete it!",cancelButtonText:"No, cancel!",reverseButtons:!0}).then(async s=>{if(s.isConfirmed)try{if((await(await fetch(`/dashboard/chat/${t}`,{method:"DELETE",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.csrfToken}})).json()).success){const i=this.getRemainingChatsCount();if(this.currentChatId==t&&(this.currentChatId=null,this.saveActiveChat(null),this.clearMessages(),this.updateChatTitle("Select a chat or start a new one"),this.disableInput(),this.showWelcomeMessage()),i===1)await this.refreshChatList(),e.fire({title:"Deleted!",text:"Your chat has been deleted.",icon:"success"});else{const o=document.querySelector(`.chat-item-wrapper[data-chat-id="${t}"]`);o&&o.remove(),e.fire({title:"Deleted!",text:"Your chat has been deleted.",icon:"success"})}}else this.showError("Failed to delete chat")}catch{this.showError("Failed to delete chat")}})}showWelcomeMessage(){const t=document.getElementById("chatMessages");t.innerHTML=`
            <div class="d-flex align-items-center justify-content-center h-100">
                <div class="text-center">
                    <div class="mb-4">
                        <i class="ft-message-circle" style="font-size: 64px; color: #007bff; opacity: 0.3;"></i>
                    </div>
                    <h4 class="text-muted">Welcome to AI Chat</h4>
                    <p class="text-muted">Start a conversation with our AI assistant</p>
                </div>
            </div>
        `}showEmptyChatMessage(){const t=document.getElementById("chatMessages");t.innerHTML=`
            <div class="d-flex align-items-center justify-content-center h-100">
                <div class="text-center">
                    <div class="mb-4">
                        <i class="ft-message-square" style="font-size: 64px; color: #6c757d; opacity: 0.3;"></i>
                    </div>
                    <h4 class="text-muted">This chat is empty</h4>
                    <p class="text-muted">Start typing your message below to begin the conversation</p>
                </div>
            </div>
        `}addChatToList(t){const e=document.getElementById("chatList"),s=document.createElement("div");s.className="chat-item-wrapper",s.dataset.chatId=t.id,s.innerHTML=`
            <div class="chat-item p-3 border-bottom cursor-pointer">
                <div class="d-flex align-items-start justify-content-between">
                    <div class="flex-grow-1">
                        <h6 class="mb-1 font-weight-medium text-dark">${t.title}</h6>
                        <p class="mb-1 text-muted small">New conversation started</p>
                        <small class="text-muted">Just now</small>
                    </div>
                    <button type="button" class="btn btn-sm btn-outline-danger delete-chat-btn ml-2" data-chat-id="${t.id}" title="Delete chat">
                        <i class="ft-trash-2"></i>
                    </button>
                </div>
            </div>
        `,e.insertBefore(s,e.firstChild)}updateChatInList(t,e){const s=document.querySelector(`.chat-item-wrapper[data-chat-id="${t}"]`);if(s){const n=s.querySelector("p");n&&(n.textContent=e.length>60?e.substring(0,60)+"...":e)}}getRemainingChatsCount(){return document.querySelectorAll(".chat-item-wrapper").length}hasAnyChats(){return!document.getElementById("chatList").querySelector(".text-center")}autoResizeTextarea(t){t.style.height="auto";const e=t.scrollHeight,s=48,n=120,a=Math.min(Math.max(e,s),n);t.style.height=a+"px",t.style.overflowY=e>n?"auto":"hidden"}async refreshChatList(){try{const t=await fetch("/dashboard/chat",{method:"GET",headers:{"Content-Type":"application/json","X-CSRF-TOKEN":this.csrfToken}});if(t.ok){const e=await t.text(),a=new DOMParser().parseFromString(e,"text/html").querySelector("#chatList");if(a){const i=document.getElementById("chatList");i.innerHTML=a.innerHTML,this.rebindChatEvents()}}}catch{}}rebindChatEvents(){document.querySelectorAll(".chat-item").forEach(t=>{t.addEventListener("click",e=>{e.preventDefault();const s=e.target.closest(".chat-item-wrapper"),n=s?s.dataset.chatId:null;n&&this.loadChat(n)})}),document.querySelectorAll(".delete-chat-btn").forEach(t=>{t.addEventListener("click",e=>{e.preventDefault(),e.stopPropagation();const s=e.target.closest(".delete-chat-btn").dataset.chatId;this.deleteChat(s)})})}}document.addEventListener("DOMContentLoaded",()=>{new r});
